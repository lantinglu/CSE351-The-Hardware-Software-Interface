******************************
* Lab 1b Synthesis Questions *
******************************
Name(s):  Lanting Lu
NetID(s):  llu3


-----------------------------------------------------------
1) Benefit 1: 
    The new representation can represent more product ids, before we have 2^6, now we have 2^8 ids.

   Benefit 2: 
   Using 8 bits makes the section more efficient to implement since 8 bits fits well for the int representation.

   Benefit 3: 
   The new representation can be easier to access the count of items since the values are stored in the lower 8 bits. 
   So we don't need to use bit masking and shifting and have reading data and updating data easier.

   Drawback: 
   Now the upper 8 bits represent the number of items in a section, while the original representation have 10 bits to represent whether an item of the section's type is stored.
   So we don't know about the place where the items are stored using the new representation.

I would like to choose the original representation. 
The original representation provides an intuitive binary status management, where each bit represents a location where an item is stored, which is straightforward.
I think it would be very efficient for a store to maitain or update the items.

-----------------------------------------------------------
2) Difference? Y/N   Y

   Explain:  
   If we make x and y both signed int or unsigned int, they have the same value. If one is signed int and the other is unsigned int, we have the  
   different value. For example, y is declared as an unsigned int, 0xFFFFFFFF assigns a value 4294967295 which is not -1. 
   0xFFFFFFFF is interpreted depends on the declared type of y, so if we don't know the declear type, we cannot say 0xFFFFFFFF and -1 is the same even though they can result in the same value in memory.

-----------------------------------------------------------
3) Explain:
   The computer represents floating point numbers having a precision limit. For floating-point numbers that exceed the precision limit, the computer truncates the fractional part of them beyond the precision.
   Encoding a decimal value into binary is hard and would have rouding errors. 
    
   Considerations:
   When choosing a threshold, the magnitude of the number and the precision level we need should  be considered.
   Very large numbers need a larger threshold while very small numbers need smaller threshold.
   Also, if we need higher precision, we need a smaller threshold to increase accuracy.
   
